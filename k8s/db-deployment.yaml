apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    app: db
spec:
  type: NodePort
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  labels:
    app: db
data:
  dbname: recipes

---

apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: cG9zdGdyZXM=

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-volume
  labels:
    type: local
    app: db
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data/postgresql"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-volume-claim
  labels:
    app: db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: db
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
                  optional: false
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: dbdata
      volumes:
        - name: dbdata
          persistentVolumeClaim:
            claimName: db-volume-claim